for _,v in pairs(game.CoreGui:GetChildren()) do
	if v.Name == "AtomicUi"then
		v:Destroy()
	end
end

local Lib = {}

function Lib:Window(name,key)
	local AtomicUi = Instance.new("ScreenGui")
	local Frame = Instance.new("Frame")
	local FrameCorner = Instance.new("UICorner")
	
	local FrameShadowHolder = Instance.new("Frame")
	local umbraShadow = Instance.new("ImageLabel")
	local penumbraShadow = Instance.new("ImageLabel")
	local ambientShadow = Instance.new("ImageLabel")
	
	local TabsFrame = Instance.new("Frame")
	local TabsCorner = Instance.new("UICorner")
	
	local Line = Instance.new("Frame")
	local LineCorner = Instance.new("UICorner")
	local TextLabel = Instance.new("TextLabel")
	
	local PagesHolder = Instance.new("Frame")
	
    local CloseButton = Instance.new("ImageButton")

	AtomicUi.Name = "AtomicUi"
	AtomicUi.Parent = game.CoreGui
	AtomicUi.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Frame.Parent = AtomicUi
	Frame.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
	Frame.BackgroundTransparency = 0.100
	Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Frame.BorderSizePixel = 0
	Frame.Position = UDim2.new(0.247474745, 0, 0.308310986, 0)
	Frame.Size = UDim2.new(0, 500, 0, 285)

	FrameCorner.Name = "FrameCorner"
	FrameCorner.Parent = Frame

	FrameShadowHolder.Name = "FrameShadowHolder"
	FrameShadowHolder.Parent = Frame
	FrameShadowHolder.BackgroundTransparency = 1.000
	FrameShadowHolder.Size = UDim2.new(1, 0, 1, 0)
	FrameShadowHolder.ZIndex = 0

	umbraShadow.Name = "umbraShadow"
	umbraShadow.Parent = FrameShadowHolder
	umbraShadow.AnchorPoint = Vector2.new(0.5, 0.5)
	umbraShadow.BackgroundTransparency = 1.000
	umbraShadow.Position = UDim2.new(0.5, 0, 0.443859637, 16)
	umbraShadow.Size = UDim2.new(1, 24, 1, 24)
	umbraShadow.ZIndex = 0
	umbraShadow.Image = "rbxassetid://1316045217"
	umbraShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
	umbraShadow.ImageTransparency = 0.860
	umbraShadow.ScaleType = Enum.ScaleType.Slice
	umbraShadow.SliceCenter = Rect.new(10, 10, 118, 118)

	penumbraShadow.Name = "penumbraShadow"
	penumbraShadow.Parent = FrameShadowHolder
	penumbraShadow.AnchorPoint = Vector2.new(0.5, 0.5)
	penumbraShadow.BackgroundTransparency = 1.000
	penumbraShadow.Position = UDim2.new(0.5, 0, 0.443859637, 16)
	penumbraShadow.Size = UDim2.new(1, 24, 1, 24)
	penumbraShadow.ZIndex = 0
	penumbraShadow.Image = "rbxassetid://1316045217"
	penumbraShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
	penumbraShadow.ImageTransparency = 0.880
	penumbraShadow.ScaleType = Enum.ScaleType.Slice
	penumbraShadow.SliceCenter = Rect.new(10, 10, 118, 118)

	ambientShadow.Name = "ambientShadow"
	ambientShadow.Parent = FrameShadowHolder
	ambientShadow.AnchorPoint = Vector2.new(0.5, 0.5)
	ambientShadow.BackgroundTransparency = 1.000
	ambientShadow.Position = UDim2.new(0.5, 0, 0.443859637, 16)
	ambientShadow.Size = UDim2.new(1, 24, 1, 24)
	ambientShadow.ZIndex = 0
	ambientShadow.Image = "rbxassetid://1316045217"
	ambientShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
	ambientShadow.ImageTransparency = 0.880
	ambientShadow.ScaleType = Enum.ScaleType.Slice
	ambientShadow.SliceCenter = Rect.new(10, 10, 118, 118)

	TabsFrame.Name = "TabsFrame"
	TabsFrame.Parent = Frame
	TabsFrame.BackgroundColor3 = Color3.fromRGB(18, 18, 18)
	TabsFrame.BackgroundTransparency = 0.200
	TabsFrame.BorderColor3 = Color3.fromRGB(18, 18, 18)
	TabsFrame.BorderSizePixel = 0
    TabsFrame.Position = UDim2.new(0, 0, 0.136842102, 0)
    TabsFrame.Size = UDim2.new(0, 122, 0, 246)
    
	TabsCorner.Name = "TabsCorner"
	TabsCorner.Parent = TabsFrame
	
	Line.Name = "Line"
	Line.Parent = Frame
	Line.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
	Line.BackgroundTransparency = 0.300
	Line.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Line.BorderSizePixel = 0
	Line.Size = UDim2.new(0, 500, 0, 34)

	LineCorner.Name = "LineCorner"
	LineCorner.Parent = Line

	TextLabel.Parent = Line
	TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 2.000
	TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
	TextLabel.BorderSizePixel = 0
	TextLabel.Position = UDim2.new(0.0180000309, 0, 0, 0)
	TextLabel.Size = UDim2.new(0, 393, 0, 34)
	TextLabel.Font = Enum.Font.RobotoCondensed
	TextLabel.Text = name
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.TextSize = 23.000
	TextLabel.TextXAlignment = Enum.TextXAlignment.Left

	PagesHolder.Name = "PagesHolder"
	PagesHolder.Parent = Frame
	PagesHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	PagesHolder.BackgroundTransparency = 2.000
	PagesHolder.BorderColor3 = Color3.fromRGB(0, 0, 0)
	PagesHolder.BorderSizePixel = 0
	PagesHolder.Position = UDim2.new(0.244000003, 0, 0.119298242, 0)
	PagesHolder.Size = UDim2.new(0, 378, 0, 251)

    CloseButton.Name = "CloseButton"
    CloseButton.Parent = Frame
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.BackgroundTransparency = 2.000
    CloseButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    CloseButton.BorderSizePixel = 0
    CloseButton.Position = UDim2.new(0.949999988, -5, 0.0280000009, -4)
    CloseButton.Size = UDim2.new(0, 22, 0, 22)
    CloseButton.Image = "rbxassetid://10747384394"
    CloseButton.MouseButton1Down:Connect(function()
        for _,v in pairs(game.CoreGui:GetChildren()) do
            if v.Name == "AtomicUi"then
                v:Destroy()
            end
        end
    end)

	local function MakeDraggable() 
		local script = Instance.new('LocalScript', Frame)

		local UIS = game:GetService("UserInputService")
		function dragify(Frame)
			dragToggle = nil
			local dragSpeed = 0
			dragInput = nil
			dragStart = nil
			local dragPos = nil
			function updateInput(input)
				local Delta = input.Position - dragStart
				local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
				game:GetService("TweenService"):Create(Frame, TweenInfo.new(0.25), {Position = Position}):Play()
			end
			Frame.InputBegan:Connect(function(input)
				if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
					dragToggle = true
					dragStart = input.Position
					startPos = Frame.Position
					input.Changed:Connect(function()
						if input.UserInputState == Enum.UserInputState.End then
							dragToggle = false
						end
					end)
				end
			end)
			Frame.InputChanged:Connect(function(input)
				if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
					dragInput = input
				end
			end)
			game:GetService("UserInputService").InputChanged:Connect(function(input)
				if input == dragInput and dragToggle then
					updateInput(input)
				end
			end)
		end

		dragify(script.Parent)
	end

	MakeDraggable()

    local PageT = {}

    function PageT:Tab(name,vis)
        local TabButton = Instance.new("TextButton")
        local TabButtonCorner = Instance.new("UICorner")
        local Page = Instance.new("Frame")
        local ScrollingFrame = Instance.new("ScrollingFrame")
        local UIListLayout = Instance.new("UIListLayout")
        local UIListLayout1 = Instance.new("UIListLayout")

        TabButton.Name = "TabButton"
        TabButton.Parent = TabsFrame
        TabButton.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
        TabButton.BackgroundTransparency = 0.80
        TabButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
        TabButton.BorderSizePixel = 0
        TabButton.Position = UDim2.new(0.0983606577, 0, 0.0772200748, 1)
        TabButton.Size = UDim2.new(0, 98, 0, 26)
        TabButton.AutoButtonColor = false
        TabButton.Font = Enum.Font.RobotoCondensed
        TabButton.Text = name
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.TextSize = 14.000
        
        TabButtonCorner.Name = "TabButtonCorner"
        TabButtonCorner.Parent = TabButton
        
        
        Page.Name = "Page"
        Page.Parent = PagesHolder
        Page.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Page.BackgroundTransparency = 2.000
        Page.BorderColor3 = Color3.fromRGB(0, 0, 0)
        Page.BorderSizePixel = 0
        Page.Size = UDim2.new(0, 378, 0, 251)
        Page.Visible = vis
        
        ScrollingFrame.Parent = Page
        ScrollingFrame.Active = true
        ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        ScrollingFrame.BackgroundTransparency = 2.000
        ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
        ScrollingFrame.BorderSizePixel = 0
        ScrollingFrame.Size = UDim2.new(0, 378, 0, 251)
        ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
        ScrollingFrame.ScrollBarThickness = 7
        
        UIListLayout.Parent = ScrollingFrame
        UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 7)

        UIListLayout1.Parent = TabsFrame
        UIListLayout1.HorizontalAlignment = Enum.HorizontalAlignment.Center
        UIListLayout1.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout1.Padding = UDim.new(0, 6)

        TabButton.MouseButton1Down:Connect(function()
            for i,v in pairs(PagesHolder:GetChildren()) do
                if v:IsA("Frame") then
                    v.Visible = false
                end
                Page.Visible = true
            end
            game:GetService("TweenService"):Create(TabButton,TweenInfo.new(0.25),{BackgroundTransparency=0.60}):Play()
            wait(0.01)
            game:GetService("TweenService"):Create(TabButton,TweenInfo.new(0.25),{BackgroundTransparency=0.80}):Play()
        end)

        local PageElements = {}

        function PageElements:Label(text,color)
            local LabelFrame = Instance.new("Frame")
            local LabelFrameFrameCorner = Instance.new("UICorner")
            local LabelFrameText = Instance.new("TextLabel")
            local LabelFunction = {}

            LabelFrame.Name = "LabelFrame"
            LabelFrame.Parent = ScrollingFrame
            LabelFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            LabelFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            LabelFrame.BorderSizePixel = 0
            LabelFrame.Position = UDim2.new(0.0289999992, 0, 0.600000024, -13)
            LabelFrame.Size = UDim2.new(0, 357, 0, 33)
            
            LabelFrameFrameCorner.CornerRadius = UDim.new(0, 5)
            LabelFrameFrameCorner.Name = "LabelFrameFrameCorner"
            LabelFrameFrameCorner.Parent = LabelFrame
            
            LabelFrameText.Name = "LabelFrameText"
            LabelFrameText.Parent = LabelFrame
            LabelFrameText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            LabelFrameText.BackgroundTransparency = 2.000
            LabelFrameText.BorderColor3 = Color3.fromRGB(0, 0, 0)
            LabelFrameText.BorderSizePixel = 0
            LabelFrameText.Position = UDim2.new(0.000106341366, 0, 0, 0)
            LabelFrameText.Size = UDim2.new(0, 356, 0, 33)
            LabelFrameText.Font = Enum.Font.RobotoCondensed
            LabelFrameText.Text = text or "Label"
            LabelFrameText.TextColor3 = color or Color3.fromRGB(255, 255, 255)
            LabelFrameText.TextSize = 14.000

            ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)

            function LabelFunction:Set(newtxt,newColor)
                LabelFrameText.Text = newtxt
                LabelFrameText.TextColor3 = newColor
            end
            return LabelFunction
        end
        function PageElements:Button(text,callback)
            local ButtonFrame = Instance.new("Frame")
            local ButtonFrameCorner = Instance.new("UICorner")
            local Button = Instance.new("TextButton")
            local ButtonFrameimage = Instance.new("ImageLabel")
            local callback = callback or function () end

            ButtonFrame.Name = "ButtonFrame"
            ButtonFrame.Parent = ScrollingFrame
            ButtonFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            ButtonFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            ButtonFrame.BorderSizePixel = 0
            ButtonFrame.Position = UDim2.new(0.0291005298, 0, 0.0478087664, 0)
            ButtonFrame.Size = UDim2.new(0, 357, 0, 33)
            
            ButtonFrameCorner.CornerRadius = UDim.new(0, 5)
            ButtonFrameCorner.Name = "ButtonFrameCorner"
            ButtonFrameCorner.Parent = ButtonFrame
            
            Button.Name = "Button"
            Button.Parent = ButtonFrame
            Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Button.BackgroundTransparency = 2.000
            Button.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Button.BorderSizePixel = 0
            Button.Position = UDim2.new(0.0196078438, 0, 0, 0)
            Button.Size = UDim2.new(0, 350, 0, 33)
            Button.Font = Enum.Font.RobotoCondensed
            Button.Text = text or "Button"
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.TextSize = 14.000
            Button.TextXAlignment = Enum.TextXAlignment.Left
            
            ButtonFrameimage.Name = "ButtonFrameimage"
            ButtonFrameimage.Parent = ButtonFrame
            ButtonFrameimage.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ButtonFrameimage.BackgroundTransparency = 2.000
            ButtonFrameimage.BorderColor3 = Color3.fromRGB(0, 0, 0)
            ButtonFrameimage.BorderSizePixel = 0
            ButtonFrameimage.Position = UDim2.new(0.924369752, 0, 0.151515156, 0)
            ButtonFrameimage.Size = UDim2.new(0, 19, 0, 23)
            ButtonFrameimage.Image = "rbxassetid://10734898355"
            
            ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)

            Button.MouseButton1Down:Connect(function()
                game:GetService("TweenService"):Create(ButtonFrame,TweenInfo.new(0.25),{BackgroundColor3=Color3.fromRGB(20, 20, 20)}):Play()
                wait(0.01)
                game:GetService("TweenService"):Create(ButtonFrame,TweenInfo.new(0.25),{BackgroundColor3=Color3.fromRGB(25, 25, 25)}):Play()
                pcall(callback)
            end)
        end

        function PageElements:Toggle(name,callback)
            local ToggleFrame = Instance.new("Frame")
            local ToggleFrameCorner = Instance.new("UICorner")
            local ToggleButton = Instance.new("TextButton")
            local Toggle = Instance.new("Frame")
            local UICorner = Instance.new("UICorner")
            local callback = callback or function () end
            local ToggleEnabled = false

            ToggleFrame.Name = "ToggleFrame"
            ToggleFrame.Parent = ScrollingFrame
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            ToggleFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
            ToggleFrame.BorderSizePixel = 0
            ToggleFrame.Position = UDim2.new(0.0289999992, 0, 0.200000003, 4)
            ToggleFrame.Size = UDim2.new(0, 357, 0, 33)
            
            ToggleFrameCorner.CornerRadius = UDim.new(0, 5)
            ToggleFrameCorner.Name = "ToggleFrameCorner"
            ToggleFrameCorner.Parent = ToggleFrame
            
            ToggleButton.Name = "ToggleButton"
            ToggleButton.Parent = ToggleFrame
            ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            ToggleButton.BackgroundTransparency = 2.000
            ToggleButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
            ToggleButton.BorderSizePixel = 0
            ToggleButton.Position = UDim2.new(0.0197142698, 0, 0, 0)
            ToggleButton.Size = UDim2.new(0, 349, 0, 33)
            ToggleButton.Font = Enum.Font.RobotoCondensed
            ToggleButton.Text = name or "toggle"
            ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            ToggleButton.TextSize = 14.000
            ToggleButton.TextXAlignment = Enum.TextXAlignment.Left
            
            Toggle.Name = "Toggle"
            Toggle.Parent = ToggleFrame
            Toggle.BackgroundColor3 = Color3.fromRGB(211, 0, 0)
            Toggle.BorderColor3 = Color3.fromRGB(0, 0, 0)
            Toggle.BorderSizePixel = 0
            Toggle.Position = UDim2.new(0.926761985, 0, 0.091697, 1)
            Toggle.Size = UDim2.new(0, 19, 0, 23)
            
            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = Toggle
            
            ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)

            ToggleButton.MouseButton1Down:Connect(function()
                ToggleEnabled = not ToggleEnabled
                if ToggleEnabled then 
                    game:GetService("TweenService"):Create(Toggle,TweenInfo.new(0.25),{BackgroundColor3=Color3.fromRGB(0, 211, 0)}):Play()
                else
                    game:GetService("TweenService"):Create(Toggle,TweenInfo.new(0.25),{BackgroundColor3=Color3.fromRGB(211, 0, 0)}):Play()
                end
                pcall(callback,ToggleEnabled)
            end)
            function PageElements:Textbox(name,txt,callback)
                local TextboxFrame = Instance.new("Frame")
                local TextboxFrameCorner = Instance.new("UICorner")
                local TextLabel_2 = Instance.new("TextLabel")
                local TextBox = Instance.new("TextBox")
                local UICorner_2 = Instance.new("UICorner")
                local callback = callback or function() end

                TextboxFrame.Name = "TextboxFrame"
                TextboxFrame.Parent = ScrollingFrame
                TextboxFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                TextboxFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
                TextboxFrame.BorderSizePixel = 0
                TextboxFrame.Position = UDim2.new(0.0289999992, 0, 0.400000006, -4)
                TextboxFrame.Size = UDim2.new(0, 357, 0, 33)
                
                TextboxFrameCorner.CornerRadius = UDim.new(0, 5)
                TextboxFrameCorner.Name = "TextboxFrameCorner"
                TextboxFrameCorner.Parent = TextboxFrame
                
                TextLabel_2.Parent = TextboxFrame
                TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TextLabel_2.BackgroundTransparency = 2.000
                TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
                TextLabel_2.BorderSizePixel = 0
                TextLabel_2.Position = UDim2.new(0.0199999996, 0, 0, 0)
                TextLabel_2.Size = UDim2.new(0, 349, 0, 33)
                TextLabel_2.Font = Enum.Font.RobotoCondensed
                TextLabel_2.Text = name
                TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
                TextLabel_2.TextSize = 14.000
                TextLabel_2.TextXAlignment = Enum.TextXAlignment.Left
                
                TextBox.Parent = TextboxFrame
                TextBox.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
                TextBox.BackgroundTransparency = 0.050
                TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
                TextBox.BorderSizePixel = 0
                TextBox.Position = UDim2.new(0.705988765, 0, 0.0909090936, 0)
                TextBox.Size = UDim2.new(0, 97, 0, 26)
                TextBox.Font = Enum.Font.RobotoCondensed
                TextBox.Text = txt or ""
                TextBox.TextColor3 = Color3.fromRGB(200, 200, 200)
                TextBox.TextSize = 12.000
                UICorner_2.Parent = TextBox
                ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, UIListLayout.AbsoluteContentSize.Y)

                TextBox.Focused:Connect(function()
                    game:GetService("TweenService"):Create(TextBox,TweenInfo.new(0.25),{BackgroundColor3=Color3.fromRGB(20,20,20)}):Play()
                    TextBox.TextColor3 = Color3.fromRGB(254, 254, 254)
                end)
                
                TextBox.FocusLost:Connect(function()
                    game:GetService("TweenService"):Create(TextBox,TweenInfo.new(0.25),{BackgroundColor3=Color3.fromRGB(17,17,17)}):Play()
                    callback(TextBox.Text)
                    TextBox.Text = txt
                    TextBox.TextColor3 = Color3.fromRGB(200, 200, 200)
                end)
    
            end
        end
        return PageElements
    end
    return PageT
end

local win = Lib:Window("Baki Hub , Brookhaven 🏡RP ")
local tab = win:Tab("mk",true)
local tab1 = win:Tab("Target",true)

local Lb = tab1:Label(Welcome plr.Name,Color3.fromRGB(255, 255, 255))
wait(1)

Lb:Set("mK",Color3.fromRGB(255, 255, 0))



tab:Button("Sofa",function()
	local args = {
		[1] = "PickingTools",
		[2] = "Couch"
	}
	
	game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))

end)

tab:Button("Bring",function()
	local Targets = {mk}
	local Players = game:GetService("Players")
	local Player = Players.LocalPlayer
	local AllBool = false
	
	local GetPlayer = function(Name)
		Name = Name:lower()
		if Name == "all" or Name == "others" then
			AllBool = false
			return
		elseif Name == "random" then
			local GetPlayers = Players:GetPlayers()
			if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
			return GetPlayers[math.random(#GetPlayers)]
		elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
			for _,x in next, Players:GetPlayers() do
				if x ~= Player then
					if x.Name:lower():match("^"..Name) then
						return x;
					elseif x.DisplayName:lower():match("^"..Name) then
						return x;
					end
				end
			end
		else
			return
		end
	end
		
	local Fling = function(TargetPlayer)
		local Character = Player.Character
		local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
		local RootPart = Humanoid and Humanoid.RootPart
	
		local TCharacter = TargetPlayer.Character
		local THumanoid
		local TRootPart
		local THead
		local Accessory
		local Handle
	
		if TCharacter:FindFirstChildOfClass("Humanoid") then
			THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
		end
		if THumanoid and THumanoid.RootPart then
			TRootPart = THumanoid.RootPart
		end
		if TCharacter:FindFirstChild("Head") then
			THead = TCharacter.Head
		end
		if TCharacter:FindFirstChildOfClass("Accessory") then
			Accessory = TCharacter:FindFirstChildOfClass("Accessory")
		end
		if Accessoy and Accessory:FindFirstChild("Handle") then
			Handle = Accessory.Handle
		end
	
		if Character and Humanoid and RootPart then
			if RootPart.Velocity.Magnitude < 50 then
				getgenv().OldPos = RootPart.CFrame
			end
			if AllBool then
				return 
			end
			if THead then
				workspace.CurrentCamera.CameraSubject = THead
			elseif not THead and Handle then
				workspace.CurrentCamera.CameraSubject = Handle
			elseif THumanoid and TRootPart then
				workspace.CurrentCamera.CameraSubject = THumanoid
			end
			if not TCharacter:FindFirstChildWhichIsA("BasePart") then
				return
			end
			
			local FPos = function(BasePart, Pos, Ang)
				RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
				Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
				RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
				RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
			end
			
			local SFBasePart = function(BasePart)
				local TimeToWait = 3
				local Time = tick()
				local Angle = 0
				
				
				repeat
					if RootPart and THumanoid then
						if BasePart.Velocity.Magnitude < 50 then
							Angle = Angle + 100
	
							FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
							task.wait()
	
							FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
							task.wait()
	
							FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
							task.wait()
	
							FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
							task.wait()
	
							FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
							task.wait()
	
							FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
							task.wait()
						else
							FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
							task.wait()
	
							FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
							task.wait()
	
							FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
							task.wait()
							
							FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
							task.wait()
	
							FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
							task.wait()
	
							FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
							task.wait()
	
							FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
							task.wait()
	
							FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
							task.wait()
	
							FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
							task.wait()
	
							FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
							task.wait()
						end
					else
						break
					end
				until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
			end
			wait(0)
			
			workspace.FallenPartsDestroyHeight = 0/0
			task.wait()
			local BV = Instance.new("BodyVelocity")
			BV.Name = "EpixVel"
			BV.Parent = RootPart
			BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
			BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
			
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
			
			if TRootPart and THead then
				if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
					SFBasePart(THead)
				else
					SFBasePart(TRootPart)
				end
			elseif TRootPart and not THead then
				SFBasePart(TRootPart)
			elseif not TRootPart and THead then
				SFBasePart(THead)
			elseif not TRootPart and not THead and Accessory and Handle then
				SFBasePart(Handle)
			else
				return 
			end

			task.wait()
			BV:Destroy()
			Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
			workspace.CurrentCamera.CameraSubject = Humanoid
			
			repeat
				RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
				Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
				Humanoid:ChangeState("GettingUp")
				table.foreach(Character:GetChildren(), function(_, x)
					if x:IsA("BasePart") then
						x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
					end
				end)
				task.wait()
			until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
			workspace.FallenPartsDestroyHeight = getgenv().FPDH
		else
			return 
		end
	end
	
	getgenv().Welcome = true
	if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end
	
	if AllBool then
		for _,x in next, Players:GetPlayers() do
			Fling(x)
		end
	end

	
	for _,x in next, Targets do
		if GetPlayer(x) and GetPlayer(x) ~= Player then
			local TPlayer = GetPlayer(x)
			if TPlayer then
				Fling(TPlayer)
			end
		end
	end
end)

tab1:Toggle("Fling",function(state)
	if state then
		game:GetService("StarterGui"):SetCore("SendNotification", { 
			Title = "تم استهداف اللاعب Fling ";
			Text = "Discord Is : .2mk ";
			Icon = ""})
			Duration = 5; 
	
        getgenv().Fling = true
        if getgenv().Fling == true then
            repeat wait()
				local Targets = {mk}
				local Players = game:GetService("Players")
				local Player = Players.LocalPlayer
				local AllBool = false
				
				local GetPlayer = function(Name)
					Name = Name:lower()
					if Name == "all" or Name == "others" then
						AllBool = false
						return
					elseif Name == "random" then
						local GetPlayers = Players:GetPlayers()
						if table.find(GetPlayers,Player) then table.remove(GetPlayers,table.find(GetPlayers,Player)) end
						return GetPlayers[math.random(#GetPlayers)]
					elseif Name ~= "random" and Name ~= "all" and Name ~= "others" then
						for _,x in next, Players:GetPlayers() do
							if x ~= Player then
								if x.Name:lower():match("^"..Name) then
									return x;
								elseif x.DisplayName:lower():match("^"..Name) then
									return x;
								end
							end
						end
					else
						return
					end
				end
					
				local Fling = function(TargetPlayer)
					local Character = Player.Character
					local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
					local RootPart = Humanoid and Humanoid.RootPart
				
					local TCharacter = TargetPlayer.Character
					local THumanoid
					local TRootPart
					local THead
					local Accessory
					local Handle
				
					if TCharacter:FindFirstChildOfClass("Humanoid") then
						THumanoid = TCharacter:FindFirstChildOfClass("Humanoid")
					end
					if THumanoid and THumanoid.RootPart then
						TRootPart = THumanoid.RootPart
					end
					if TCharacter:FindFirstChild("Head") then
						THead = TCharacter.Head
					end
					if TCharacter:FindFirstChildOfClass("Accessory") then
						Accessory = TCharacter:FindFirstChildOfClass("Accessory")
					end
					if Accessoy and Accessory:FindFirstChild("Handle") then
						Handle = Accessory.Handle
					end
				
					if Character and Humanoid and RootPart then
						if RootPart.Velocity.Magnitude < 50 then
							getgenv().OldPos = RootPart.CFrame
						end
						if AllBool then
							return 
						end
						if THead then
							workspace.CurrentCamera.CameraSubject = THead
						elseif not THead and Handle then
							workspace.CurrentCamera.CameraSubject = Handle
						elseif THumanoid and TRootPart then
							workspace.CurrentCamera.CameraSubject = THumanoid
						end
						if not TCharacter:FindFirstChildWhichIsA("BasePart") then
							return
						end
						
						local FPos = function(BasePart, Pos, Ang)
							RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
							Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
							RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
							RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
						end
						
						local SFBasePart = function(BasePart)
							local TimeToWait = 3
							local Time = tick()
							local Angle = 0
							
							
							repeat
								if RootPart and THumanoid then
									if BasePart.Velocity.Magnitude < 50 then
										Angle = Angle + 100
				
										FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
										task.wait()
				
										FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
										task.wait()
				
										FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
										task.wait()
				
										FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
										task.wait()
				
										FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
										task.wait()
				
										FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
										task.wait()
									else
										FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
										task.wait()
				
										FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
										task.wait()
				
										FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
										task.wait()
										
										FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
										task.wait()
				
										FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
										task.wait()
				
										FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
										task.wait()
				
										FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
										task.wait()
				
										FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
										task.wait()
				
										FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
										task.wait()
				
										FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
										task.wait()
									end
								else
									break
								end
							until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
						end
						wait(0)
						
						workspace.FallenPartsDestroyHeight = 0/0
						task.wait()
						local BV = Instance.new("BodyVelocity")
						BV.Name = "EpixVel"
						BV.Parent = RootPart
						BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
						BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)
						
						Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
						
						if TRootPart and THead then
							if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
								SFBasePart(THead)
							else
								SFBasePart(TRootPart)
							end
						elseif TRootPart and not THead then
							SFBasePart(TRootPart)
						elseif not TRootPart and THead then
							SFBasePart(THead)
						elseif not TRootPart and not THead and Accessory and Handle then
							SFBasePart(Handle)
						else
							return 
						end

						task.wait()
						BV:Destroy()
						Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
						workspace.CurrentCamera.CameraSubject = Humanoid
						
						repeat
							RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
							Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
							Humanoid:ChangeState("GettingUp")
							table.foreach(Character:GetChildren(), function(_, x)
								if x:IsA("BasePart") then
									x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
								end
							end)
							task.wait()
						until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25
						workspace.FallenPartsDestroyHeight = getgenv().FPDH
					else
						return 
					end
				end
				
				getgenv().Welcome = true
				if Targets[1] then for _,x in next, Targets do GetPlayer(x) end else return end
				
				if AllBool then
					for _,x in next, Players:GetPlayers() do
						Fling(x)
					end
				end
			
				
				for _,x in next, Targets do
					if GetPlayer(x) and GetPlayer(x) ~= Player then
						local TPlayer = GetPlayer(x)
						if TPlayer then
							Fling(TPlayer)
						end
					end
				end
			
                
                
            until getgenv().Fling == false
end
    else
       getgenv().Fling = false

    end
end)

tab:Textbox("Walk Speed","Speed Here!",function(x)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = x
end)






tab1:Textbox("Name Player..","Type Here!",function(txt)
	mk = txt
end)

tab1:Toggle("View",function(x)
	local TargetV = mk
	
	if x then
		game.Workspace.Camera.CameraSubject = TargetV.Character.Humanoid
	else
		game.Workspace.Camera.CameraSubject = game.Players.LocalPlayer.Character.Humanoid
	end    
end)
